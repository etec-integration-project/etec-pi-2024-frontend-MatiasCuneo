// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  isTFAEnabled  Boolean         @default(false)
  TFConfirm     TFConfirm?
}

model Account {
  id                String      @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id                String      @id @default(cuid())
  email             String
  token             String      @unique
  expires_at        DateTime

  @@unique([email, token])
}

model PassResetToken {
  id                String      @id @default(cuid())
  email             String
  token             String      @unique
  expires_at        DateTime

  @@unique([email, token])
}

model TFToken {
  id                String      @id @default(cuid())
  email             String
  token             String      @unique
  expires_at        DateTime

  @@unique([email, token])
}

model TFConfirm {
  id                String      @id @default(cuid())
  userId            String
  
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}